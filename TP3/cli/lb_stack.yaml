heat_template_version: 2014-10-16

#Inspiré du template trouvé à l'URL suivant (GitHub) : http://bit.ly/1XOZsLl

description: Un template pour déployer plusieurs serveurs avec un balanceur de charges (2.0)

parameters:
  image:
    type: string
    label: Image pour les serveurs (Python)
    description: Image utilisee pour les serveurs
    default: INF4410-Ubuntu-trusty-mini

  flavor:
    type: string
    label: Flavor
    description: Flavor utilisee par les serveurs
    default: INF4410-mini

#  lb_net_id:
  #  type: string
    #label: Sous-réseau (balanceur de charges)
    #description: Sous-reseau dans lequel le load balancer sera situe
    #default: 0c3b1354-d3d5-4fec-86d3-19d4d1f13785  #ext-net

  public_server_net:
    type: string
    label: Réseau public (serveurs Python)
    description: Réseau public associé aux instances
    default: bab3b2e9-8a18-442f-b8d4-98cba4d19dba #INF4410-20-net

  private_server_net:
    type: string
    label: Réseau privé (serveurs Python)
    description: Reseau privé associé aux instances
    default: cac571ab-8e5c-4332-8e05-4c69a56bda9e #reseau-pour-tous

resources:
  servers:
      type: OS::Heat::ResourceGroup
      properties:
        count: 2
        resource_def:
            type: OS::Nova::Server
            properties:
                name: server_%index%
                image: { get_param: image }
                flavor: { get_param: flavor }
                networks:
                  - network : { get_param: public_server_net }
                  - network : { get_param: private_server_net }
                user_data: |
                    #!/bin/bash
                    wget http://secretaire.dorsal.polymtl.ca/~hdaoud/infonuagique/server.py
                    python server.py &

  pool:
    type: OS::Neutron::Pool
    properties:
      protocol: HTTP
      monitors: [ {get_resource: monitor }]
      subnet_id: { get_param: public_server_net }
      lb_method: ROUND_ROBIN
      vip:
        protocol_port: 80

  lb:
    type: OS::Neutron::LoadBalancer
    properties:
      protocol_port: 80
      pool_id: { get_resource: pool }

  #lb_floating:
    #type: OS::Neutron::FloatingIP
    #properties:
      #floating_network_id: { get_param: public_server_net }
      #port_id: { get_attr: [pool, vip, port_id] }

  monitor:
      type: OS::Neutron::HealthMonitor
      properties:
        type: TCP
        delay: 13
        max_retries: 2
        timeout: 9

outputs:
  pool_ip_address:
    description: L'adresse IP du pool de l'équilibreur de charges
    value: { get_attr: [pool, vip, address] }

  #lb_ip_adress:
  #  description: L'adresse IP de l'équilibreur de charges
    #value: { get_attr: [lb_floating, floating_ip_address] }
